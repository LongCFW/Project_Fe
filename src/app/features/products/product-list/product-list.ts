import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { ProductDetail } from '../product-detail/product-detail';
import { CartStateService } from '../../../core/cart-state'; // üü¢ service qu·∫£n l√Ω gi·ªè h√†ng to√†n c·ª•c

// ==========================
// üß© Interface ƒë·ªãnh nghƒ©a s·∫£n ph·∫©m
// ==========================
interface Product {
  id: number;
  name: string;
  img: string;
  gia: number;
  category: string;
  subCategory: string;
  size: string;
}

// ==========================
// üõçÔ∏è Component ProductList (Trang Shop ch√≠nh)
// ==========================
@Component({
  selector: 'app-shop',
  standalone: true,
  imports: [CommonModule, FormsModule, ProductDetail],
  templateUrl: './product-list.html',
  styleUrls: ['./product-list.scss']
})
export class ProductList {
  // ========== D·ªÆ LI·ªÜU C∆† B·∫¢N ==========
  data: Product[] = [];
  displayedProducts: Product[] = [];
  filteredData: Product[] = [];
  productsPerPage = 8;
  currentCount = this.productsPerPage;
  showAll = false;

  filter = { category: 'all', subCategory: 'all', size: 'all', price: 'all' };
  subCategories = ['√°o thun', '√°o s∆° mi', '√°o kho√°c', '√°o len', 'cardigan', 'hoodie', '√°o polo', 'qu·∫ßn jean', 'qu·∫ßn kaki'];
  sizes = ['S', 'M', 'L', 'XL', 'XXL'];

  selectedProduct: Product | null = null;
  toastMessage: string | null = null;

  // üß† Kh√¥ng c√≤n d√πng localStorage tr·ª±c ti·∫øp
  constructor(private cartState: CartStateService) {
    this.initData();
    this.filteredData = this.data;
    this.render();
  }

  quantity = 1;
  modalStats = '';

  // ==========================
  // üîπ H√ÄM SINH SIZE NG·∫™U NHI√äN
  // ==========================
  randomSize() {
    const sizes = ['S', 'M', 'L', 'XL', 'XXL'];
    return sizes[Math.floor(Math.random() * sizes.length)];
  }

  // ==========================
  // üîπ KH·ªûI T·∫†O D·ªÆ LI·ªÜU S·∫¢N PH·∫®M (fake data)
  // ==========================
  initData() {
    this.data = [
      { id: 1, name: "√°o thun ƒëen tr∆°n boxy", img: "assets/images/thun_tron.jpg", gia: 581000, category: "ao", subCategory: "√°o thun", size: this.randomSize() },
      { id: 2, name: "√°o len l√¥ng n·ªâ", img: "assets/images/ao_len.jpg", gia: 456000, category: "ao", subCategory: "√°o len", size: this.randomSize() },
      { id: 3, name: "√°o len cao c·ªï", img: "assets/images/ao_len1.jpg", gia: 511000, category: "ao", subCategory: "√°o len", size: this.randomSize() },
      { id: 4, name: "√°o len c·ªï tr√≤n", img: "assets/images/ao_len3.jpg", gia: 234000, category: "ao", subCategory: "√°o len", size: this.randomSize() },
      { id: 5, name: "Collared Cardigan", img: "assets/images/cardigan4.jpg", gia: 735000, category: "ao", subCategory: "cardigan", size: this.randomSize() },
      { id: 6, name: "V-neck Cardigan", img: "assets/images/cardigan23.jpg", gia: 227000, category: "ao", subCategory: "cardigan", size: this.randomSize() },
      { id: 7, name: "Shawl Collar Cardigan", img: "assets/images/cardigan.jpg", gia: 208000, category: "ao", subCategory: "cardigan", size: this.randomSize() },
      { id: 8, name: "Oversized V-neck Cardigan", img: "assets/images/cardigan1.jpg", gia: 207000, category: "ao", subCategory: "cardigan", size: this.randomSize() },
      { id: 9, name: "Basic Knit Cardigan", img: "assets/images/cardigan2.jpg", gia: 826000, category: "ao", subCategory: "cardigan", size: this.randomSize() },
      { id: 10, name: "jean ·ªëng r·ªông", img: "assets/images/jean_ongrong.jpg", gia: 265000, category: "quan", subCategory: "qu·∫ßn jean", size: this.randomSize() },
      { id: 11, name: "Basic Knit Cardigan", img: "assets/images/cardigan2.jpg", gia: 826000, category: "ao", subCategory: "cardigan", size: this.randomSize() },
      { id: 12, name: "jean ·ªëng r·ªông", img: "assets/images/jean_ongrong.jpg", gia: 265000, category: "quan", subCategory: "qu·∫ßn jean", size: this.randomSize() },
    ];
  }

  // ==========================
  // üîπ HI·ªÇN TH·ªä DANH S√ÅCH S·∫¢N PH·∫®M
  // ==========================
  render() {
    this.displayedProducts = this.filteredData.slice(0, this.currentCount);
  }

  showMore() {
    this.showAll = true;
    this.displayedProducts = this.filteredData;
  }

  collapseList() {
    this.showAll = false;
    this.currentCount = this.productsPerPage;
    this.render();
  }

  // ==========================
  // üîπ L·ªåC S·∫¢N PH·∫®M
  // ==========================
  applyFilter() {
    let filtered = this.data;
    const { category, subCategory, size, price } = this.filter;

    if (category !== 'all') filtered = filtered.filter(p => p.category === category);
    if (subCategory !== 'all') filtered = filtered.filter(p => p.subCategory === subCategory);
    if (size !== 'all') filtered = filtered.filter(p => p.size === size);
    if (price !== 'all') {
      const [min, max] = price.split('-').map(Number);
      filtered = filtered.filter(p => p.gia >= min && p.gia <= (max || Infinity));
    }

    this.filteredData = filtered;
    this.collapseList();
  }


  // ==========================
  // üß© NHI·ªÜM V·ª§ 1 ‚Äî TH√äM V√ÄO GI·ªé H√ÄNG
  // ==========================
  addToCart(p: Product, quantity: number = 1) {
    this.cartState.addToCart({ ...p, quantity }); // d√πng quantity truy·ªÅn v√†o
    this.cartState.setHasItem(true);
    this.showToast(`‚úÖ ${p.name} ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng!`);
  }

  // ==========================
  // üß© NHI·ªÜM V·ª§ 2 ‚Äî TOAST TH√îNG B√ÅO
  // ==========================
  showToast(message: string) {
    this.toastMessage = message;
    setTimeout(() => this.toastMessage = null, 3000);
  }

  // ==========================
  // üß© NHI·ªÜM V·ª§ 3 ‚Äî MODAL CHI TI·∫æT S·∫¢N PH·∫®M
  // ==========================
  openModal(p: Product) {
    this.selectedProduct = p;
    this.quantity = 1;
    const rating = (Math.random() * 1 + 4).toFixed(1);
    const reviews = (Math.floor(Math.random() * 2000) + 100).toLocaleString('vi-VN');
    const sold = Math.floor(Math.random() * 50) + 'k+';
    this.modalStats = `${rating}‚≠ê | ${reviews} ƒê√°nh gi√° | ƒê√£ b√°n ${sold}`;
  }

  closeDetail() {
    this.selectedProduct = null;
  }

  // ==========================
  // üß© NHI·ªÜM V·ª§ 4 ‚Äî TH√äM T·ª™ MODAL CHI TI·∫æT
  // ==========================
  addFromDetail(event: { product: Product, quantity: number }) {
    this.cartState.addToCart({ ...event.product, quantity: event.quantity });
    this.cartState.setHasItem(true);
    this.closeDetail();
  }

  //  ////////////
  handleAddToCart(event: { product: Product, quantity: number }) {
    this.cartState.addToCart({ ...event.product, quantity: event.quantity }); //
    this.cartState.setHasItem(true);
  }

  ///
  resetFilter() {
  this.filter = { category: 'all', subCategory: 'all', size: 'all', price: 'all' };
  this.filteredData = this.data;
  this.collapseList(); // hi·ªÉn th·ªã l·∫°i m·∫∑c ƒë·ªãnh (8 s·∫£n ph·∫©m)
}
}
